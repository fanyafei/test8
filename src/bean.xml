<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
                http://www.springframework.org/schema/beans
                http://www.springframework.org/schema/beans/spring-beans.xsd
                http://www.springframework.org/schema/aop
                http://www.springframework.org/schema/aop/spring-aop.xsd
                http://www.springframework.org/schema/context
                http://www.springframework.org/schema/context/spring-context.xsd">
        <!-- 配置spring创建容器时要扫描的包 -->
        <context:component-scan base-package="com.itheima"></context:component-scan>
        <!-- 开启spring对注解AOP的支持 -->
        <aop:aspectj-autoproxy></aop:aspectj-autoproxy>









        <!-- 配置service -->
        <!--<bean id="customerService" class="com.itheima.service.impl.ICustomerServiceImpl"></bean>-->
        <!-- 第一步：把通知类交给spring来管理 -->
        <!--<bean id="logger" class="com.itheima.utils.Logger"></bean>-->
       <!--<aop:config>-->
            <!--&lt;!&ndash; 定义通用的切入点表达式,如果写在aop:aspect标签外部,则表示所有切面可用 &ndash;&gt;-->
            <!--<aop:pointcut id="pt1" expression="execution(* com.itheima.service.impl.*.*(..))"/>-->
            <!--&lt;!&ndash; 配置切面 &ndash;&gt;-->
            <!--<aop:aspect id="logAdvice" ref="logger">-->
                <!--&lt;!&ndash; 配置前置通知:永远在切入点方法执行之前执行-->
                <!--<aop:before method="beforePrintLog" pointcut-ref="pt1"/> &ndash;&gt;-->
                <!--&lt;!&ndash; 配置后置通知:切入点方法正常执行之后执行-->
                <!--<aop:after-returning method="afterReturningPrintLog" pointcut-ref="pt1"/>&ndash;&gt;-->
                <!--&lt;!&ndash; 配置异常通知:切入点方法执行产生异常之后执行,它和后置通知永远只能执行一个-->
                <!--<aop:after-throwing method="afterThrowingPrintLog" pointcut-ref="pt1"/>&ndash;&gt;-->
                <!--&lt;!&ndash; 配置最终通知:无论切入点方法是否正常执行,它都会在其后面执行-->
                <!--<aop:before method="afterPrintLog" pointcut-ref="pt1"/>&ndash;&gt;-->

                <!--&lt;!&ndash; 配置环绕通知 &ndash;&gt;-->
                <!--<aop:around method="aroundPrintLog" pointcut-ref="pt1"/>-->
            <!--</aop:aspect>-->
        <!--</aop:config>-->
</beans>